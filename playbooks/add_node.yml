# add_node.yml is a subset of playbooks from the main site.yml to add new node to the cluster.  For more
# information about the structure see:
# http://docs.ansible.com/ansible/latest/playbooks_best_practices.html
# http://docs.ansible.com/ansible/latest/intro_inventory.html
# We follow the guidance to include naming conventions there.

# Process to adding new node to cluster:
# 1. Add node information to tfplenum-deployer inventory:
#    hostname (ie: rocksensor10.lan)
#    ip address (ie: 192.168.1.25)
#    mac address  (ie: ab:ac:ed:00:11:22)
#    pxe type (ie: bios)
#    boot drive (ie: sda)
# 2. Run the following command from tfplenum-deployer dir. This will build the appropriate kickstart and pxe boot files:
#    ansible-playbook site.yml -i inventory.yml -t kickstart,profile
# 3. PXE/Network boot new node.  This will install centos minimal on the node.
# 4. Update tfplenum inventory.yml with new node information
#    Copy/Paste one of the existing node and update the information
# 5. After the node has finished installing centos,
#    Run the following from tfplenum dir. This will update master server dns and add new node to dnsmasq running on master server:    
#    ansible-playbook site.yml -i inventory.yml -t dnsmasq,genkeys --ask-pass
# 6. This will join the node to the k8s cluster:
#    ansible-playbook add_node.yml -i inventory.yml -l <new node hostname> --ask-pass

---

- name: Setup Repos
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - setup:
  roles:
    - repos
  tags: repos

- name: Update all hosts to most recent packages
  hosts: all
  tasks:
  - name: Yum Clean all
    shell: yum clean all
    args:
      warn: false
  - name: Update all packages
    yum:
      name: '*'
      state: latest
      exclude: ceph-deploy,cockpit*,kube*
    register: system_updated
  - name:  Remove CentOS Repos
    file:
      path: "/etc/yum.repos.d/CentOS-{{ item }}.repo"
      state: absent
    with_items: "{{ CentOS_Repos }}"
    when: offline is defined and offline
  - name: Yum Clean all
    shell: yum clean all
    args:
      warn: false
  - name: Reboot system to finish installing updates
    command: "/sbin/shutdown -r +1 --no-wall"
    async: 0
    poll: 0
    ignore_errors: yes
    when: system_updated is defined and system_updated.changed
  - name: Wait for reboot to complete
    wait_for:
      host: "{{ inventory_hostname }}"
      port: 22
      delay: 120
      timeout: 300
    delegate_to: localhost
    when: system_updated is defined and system_updated.changed

- name: Common Setup
  hosts:
    - master-server
    - nodes
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - setup:
  roles:
    - common
    - chrony
  tags:
    - common

- name: Docker Images
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - setup:
  roles:
    - docker
  tags:
    - docker

- name: Configure kube nodes
  hosts:
    - remote-sensors
    - sensors
    - servers
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - setup:
  roles:
    - kubernetes/common
    - kubernetes/node
  tags:
    - add-node
    - kube-node

# - name: Setup Ceph
#   hosts: all
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - ceph
#   tags:
#     - ceph

# - name: Setup Storage
#   hosts: master-server
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - storage
#   tags:
#     - storage

# - name: Deploy Elasticsearch
#   hosts: master-server
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - elasticsearch
#   tags:
#     - elasticsearch

# - name: Deploy Logstash
#   hosts: master-server
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - logstash
#   tags:
#     - logstash

# - name: Deploy Kibana
#   hosts: master-server
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - kibana
#   tags:
#     - kibana

# - name: Deploy metricbeats
#   hosts: master-server
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - metricbeat
#   tags:
#     - metricbeat

# - name: Deploy Kafka
#   hosts: master-server
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - { role: kafka, remote: true }
#     - { role: kafka, remote: false }
#   tags:
#     - kafka

# - name: Deploy Bro
#   hosts: master-server
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - bro
#   tags:
#   - bro

# - name: Deploy Moloch
#   hosts: all
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - moloch
#   tags:
#     - moloch

# - name: Deploy Suricata
#   hosts: master-server
#   gather_facts: no
#   any_errors_fatal: true
#   pre_tasks:
#     - setup:
#   roles:
#     - suricata
#   tags:
#     - suricata

#- name: Deploy Stenographer
#  hosts:
#    - sensors
#    - remote-sensors
#  gather_facts: no
#  any_errors_fatal: true
#  pre_tasks:
#    - setup:
#  roles:
#    - stenographer
#  tags:
#    - stenographer

#- name: Deploy Docket
#  hosts: all
#  gather_facts: no
#  any_errors_fatal: true
#  pre_tasks:
#    - setup:
#  roles:
#    - docket
#  tags:
#    - docket

...
