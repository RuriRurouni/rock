######################################################
################# Setup Kibana #######################
######################################################
---

- name: "Create config directory"
  file:
    path: "{{ kibana_dir }}"
    state: directory
    owner: root
    group: root
    mode: u+rw,g+rw

- name: Install templates
  template:
    src: "templates/{{ item }}.yml.j2"
    dest: "{{ kibana_dir }}/{{ item }}.yml"
    group: root
    owner: root
    mode: 0644
  with_items:
    - deploy
    - svc

- name: Flush Deployments
  shell: |
    kubectl --kubeconfig {{ kubernetes_conf_file }} delete -f {{ kibana_dir }}/{{ item }}.yml
    while [ $(kubectl --kubeconfig {{ kubernetes_conf_file }} get -f {{ kibana_dir }}/{{ item }}.yml | tail -n +2 | wc -l) != '0' ]; do
      echo -n .;
      sleep 1;
    done;
  with_items:
    - deploy
    - svc
  ignore_errors: true

# This is here because Kubernetes repeatedly failed to download the Kibana image.
# See: https://github.com/kubernetes/kubernetes/issues/59376
# Pulling it through Docker resolves the issue
#- name: Perform Kibana download workaround
#  docker_image:
#    name: "{{ kibana_image }}:{{ kibana_ver }}"

- name: Deploy Services
  import_role:
    name: kubernetes/common
    tasks_from: kube_create
  vars:
    name: "Kibana Service"
    file_name: "{{ kibana_dir }}/svc.yml"

- name: Deploy Services
  import_role:
    name: kubernetes/common
    tasks_from: kube_create
  vars:
    name: "Kibana"
    file_name: "{{ kibana_dir }}/deploy.yml"

- name: Wait for kibana to be ready
  import_role:
    name: kubernetes/common
    tasks_from: kube_wait
  vars:
    type: "deployments"
    namespace: "default"
    resource_name: "kibana"
    label: ""
